## copy mode switch panes 
#bind-key -T copy-mode-vi 'M-j' select-pane -L
#bind-key -T copy-mode-vi 'M-k' select-pane -D
#bind-key -T copy-mode-vi 'M-l' select-pane -U
#bind-key -T copy-mode-vi 'M-;' select-pane -R
#
#bind-key -n 'M-j' select-pane -L
#bind-key -n 'M-k' select-pane -D
#bind-key -n 'M-l' select-pane -U
#bind-key -n 'M-;' select-pane -R
#
## Switch through windows with C-Tab

# Ctrl + Alt + Y for next window
bind-key -n 'C-M-y' next-window

# Ctrl + Alt + Semicolon for previous window
bind-key -n 'C-M-r' previous-window
#mod jkl; move around panes also ctrl hjkl
#HJKL resize panes  
#C-a h v new panes
#C-a z maximize pane
#C-a x killpane
#C-a o cycle through panes
#
#
#C-a c or enter new window
#C-a p          previous window
#C-a n          next window
#C-a l          ‘last’ (previously used) window
#C-a w          choose window from a list
#C-a ,          rename the current window
#C-a &          kill the current window
#
#C-a 1 ...      switch to window 1, ..., 9, 0
#C-a 9
#C-a 0
#
#Ctrl hjkl move between panes in copy mode
#
#
#C-a = layout vertical
#C-a + layout horizontal
#
#copy mode 
#
#esc enter
#q quite copy mode
#p paste 
#v select 
#C-v block select
#B begining of the line
#E end of the line
#
#Ctrl hjkl move between panes in copy mode

##########################
#  Configuration
###########################
set-option -g default-shell $SHELL
# use 256 xterm for pretty colors. This enables same colors from iTerm2 within tmux.
# This is recommended in neovim :healthcheck
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# increase scroll-back history
set -g history-limit 100000

# use vim key bindings
#; navigate (vi-like)
setw -g mode-keys vi

# enable mouse
set -g mouse on
# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# start window index at 1 instead of 0
set -g base-index 1

# start pane index at 1 instead of 0
setw -g pane-base-index 1

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
set -g renumber-windows on

# enable pbcopy and pbpaste
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/blob/master/README.md
# set-option -g default-command "reattach-to-user-namespace -l zsh"

###########################
#  Key Bindings
###########################

# Tmux prefix
# Current solution is to keep the default
# and have term map C-; to C-b. This is the nicest
# bind I've found and this is the only way to enable it in tmux
unbind C-b
set -g prefix C-a
#bind C-a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config!"

# Splits
unbind %
unbind '"'
bind-key s split-window -h
bind-key v split-window -v
# Copy vim style
# create 'v' alias for selecting text
unbind [
bind Escape copy-mode

bind-key -T copy-mode-vi 'v' send -X begin-selection
# copy with 'y' and send to mac os clipboard: http://goo.gl/2Bfn8
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle
bind-key -T copy-mode-vi 'B' send -X start-of-line
bind-key -T copy-mode-vi 'E' send -X end-of-line

#bind-key -T copy-mode-vi 'M-j' select-pane -L
#bind-key -T copy-mode-vi 'M-k' select-pane -D
#bind-key -T copy-mode-vi 'M-l' select-pane -U
#bind-key -T copy-mode-vi 'M-;' select-pane -R

# paste
unbind p
bind p paste-buffer
# q quits

## Switch panes with hjkl
#bind j select-pane -L
#bind k select-pane -D
#bind l select-pane -U
#bind \; select-pane -R
#
#bind-key -n 'M-j' select-pane -L
#bind-key -n 'M-k' select-pane -D
#bind-key -n 'M-l' select-pane -U
#bind-key -n 'M-;' select-pane -R
# Quick window selection
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+
#bind -r M-Tab select-window -t :+

# quickly open a new window
bind-key enter new-window

# Switch through windows with C-Tab
# bind-key -n C-M-i next-window
# bind-key -n C-M-, previous-window

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

## Select Layout
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

############################
## Status Bar
############################

# enable UTF-8 support in status bar
set -gq status-utf8 on

# set refresh interval for status bar
set -g status-interval 5

# center the status bar
set -g status-justify left
set -g status-position bottom

# # show session, window, pane in left status bar
# set -g status-left '#[bg=#282a36,fg=#b0b8d1,bold] #S»#I |'
# set -g status-left-length 40

# # show hostname, date, tim 100
# set -g status-right-length 60
# set -g status-right '#[bg=#282a36,fg=#b0b8d1,bold] %Y-%m-%d %H:%M:%S #[default]'


###########################
# Colors
###########################
#; standard status
#set -g status-fg white
#set -g status-bg "colour235"
##; active status
#set -g window-status-current-format '#[bg=#181a1f,fg=#ae81ff] #I.#W #(echo "#{pane_current_path}" | rev | cut -d'/' -f-2 | rev) '
##; inactive status
#set -g window-status-format '#[bg=#ae81ff,fg=#181a1f,bold] #I.#W #(echo "#{pane_current_path}" | rev | cut -d'/' -f-2 | rev)'
##pane
##set -g pane-border-style 'fg=colour23k'
##set -g pane-active-border-style 'fg=colour235'
##set -g pane-active-border-style fg='#6272a4'
#set -g pane-border-style fg='#ae81ff'
#set -g pane-active-border-style fg='#ae81ff'
#set -g status-style bg='#ae81ff',fg='#ae81ff'
##set -g status-style bg='#181a1f',fg='#494b53'
## command line
#set -g message-style fg=white
#set -g message-style bg=black
##; left status
#set -g status-left-length 40
#set -g status-left '#[fg=#282a36,bold] #S»#I'
##Right
#set -g status-right-length 60
#set -g status-right '#[fg=#282a36,bold]  %Y-%m-%d %H:%M:%S #[default]'
#set -g status-position bottom
## Center the window list
#set -g status-justify "centre"


# Pane border
set -g pane-border-style fg='#6272a4'
set -g pane-active-border-style fg='#6272a4'

# Message Style
set -g message-style bg='#1a1d21',fg='#c4cad1'

# Status Style
set -g status-style bg='#1a1d21',fg='#c4cad1'

# window status
set -g window-status-current-format '#[bg=#B084EB,fg=#1a1d21,bold,underscore] *#I.#W #(echo "#{pane_current_path}" | rev | cut -d'/' -f-2 | rev)*'
##; inactive status
set -g window-status-format '#[bg=#1a1d21,fg=#B084EB] #I.#W #(echo "#{pane_current_path}" | rev | cut -d'/' -f-2 | rev)'

# Status Right
set -g status-right-length 60
set -g status-right '#[fg=#6272a4] %d %b %R '
# Status Left
set -g status-left-length 40
set -g status-left '#[fg=#6272a4] #S»#I'

## Center the window list
set -g status-justify "centre"

###########################
# Plugins
###########################
# Setup TPM first
#   1) Check instructions on GitHub
# To install plugins:
#   1) Add plugin down here
#   2) Prefix + I to install plugin
# To update plugins:
#   1) Prefix + U
# To remove plugins:
#   1) Remove line down here
#   2) Prefix + ALT + U

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# Add more plugins below this line
# Plugin to save and restore tmux sessions after restart
# * Save with: prefix + Ctrl-s
# * Restore with: prefix + Ctlr-r
#set -g @plugin 'tmux-plugins/tmux-resurrect'
  # restore vim and nvim sessions as well
  # for vim
#  set -g @resurrect-strategy-vim 'session'
  # for neovim
#  set -g @resurrect-strategy-nvim 'session'
#  set -g @plugin 'tmux-plugins/tmux-continuum'
  # Automatic restore
  # set -g @continuum-restore 'on'

# Make navigation between tmux and vim panes seamlessly 
set -g @plugin 'christoomey/vim-tmux-navigator'

#Yank to clipboard
set -g @plugin 'tmux-plugins/tmux-yank'

# Run Tmux Plugin Manager
run '~/.tmux/plugins/tpm/tpm'


